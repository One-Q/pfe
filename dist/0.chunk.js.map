{"version":3,"file":"0.chunk.js","sources":["webpack:///./src/app/problem/index.ts","webpack:///./src/app/problem/problem-form/problem-form.component.ts","webpack:///./src/app/problem/problems.service.ts","webpack:///./src/app/problem/problems.module.ts","webpack:///./src/app/problem/problems.routes.ts","webpack:///./src/app/problem/problem-form/problem-form.component.css","webpack:///./src/app/problem/problem-form/problem-form.component.html","webpack:///./src/app/problem/problem-form/problem-form.component.css?74ba"],"sourcesContent":["export { ProblemsModule } from './problems.module'\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/problem/index.ts","import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { ProblemsService } from '../problems.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  template: require('./problem-form.component.html'),\r\n  styles: [\r\n    require('./problem-form.component.css')\r\n  ]\r\n})\r\nexport class ProblemFormComponent implements OnInit, OnDestroy {\r\n\r\n  private sub: Subscription;\r\n  public machineName: string\r\n  public machine: Object = {}\r\n  public errorMessages: Object = {}\r\n  public response: string;\r\n  form: FormGroup\r\n  image = {}\r\n  file: File;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router,private route: ActivatedRoute, private service: ProblemsService, private snackBar: MatSnackBar){}\r\n\r\n  ngOnInit(): void {\r\n    this.errorMessages = {}\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.machineName = params['machineName'];\r\n    });\r\n    this.validateMachineName()\r\n    this.constructForm()\r\n  }\r\n\r\n  openSnackBar(message: string) {\r\n    this.snackBar.open(message, '', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  validateMachineName(){\r\n    this.service.machineNameValid(this.machineName).subscribe(data => {\r\n      let obj = data.json()\r\n      this.machine = obj\r\n    }, err => {\r\n      if(err) {\r\n        this.router.navigate(['**'])\r\n      }\r\n    })\r\n  }\r\n\r\n  constructForm(){\r\n    this.form = this.formBuilder.group({\r\n      User: ['', [\r\n        Validators.required,\r\n        this.validateEmail\r\n      ]],\r\n      Name: [this.machineName, [\r\n        Validators.required,\r\n      ]],\r\n      Description:['', [\r\n        Validators.required,\r\n        this.validateDesc\r\n      ]]\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  fileChange($event) {\r\n    let reader = new FileReader();\r\n    if($event.target.files && $event.target.files.length > 0) {\r\n      let file = $event.target.files[0];\r\n      this.file = file\r\n    }\r\n  }\r\n\r\n  submitForm(){\r\n    if(this.form.valid){\r\n      let obj = this.form.value\r\n      obj.image = this.file\r\n      this.service.createProblem(obj).subscribe(data => this.openSnackBar('Votre demande a bien été enregistrée'), err => {console.log(err)})\r\n    }else{\r\n      console.log(\"erreur\")\r\n    }\r\n  }\r\n\r\n  validateEmail(c: FormControl) {\r\n    let EMAIL_REGEXP = /^.{2,20}\\..{2,20}@(student\\.vinci\\.be|vinci\\.be)$/\r\n    \r\n    return EMAIL_REGEXP.test(c.value) ? null : {\r\n      validateEmail: {\r\n        valid: false\r\n      }\r\n    };\r\n  }\r\n\r\n  validateDesc(c: FormControl) {\r\n    let DESC_REGEXP = /^.{3,200}$/\r\n  \r\n    return DESC_REGEXP.test(c.value) ? null : {\r\n      validateDesc: {\r\n        valid: false\r\n      }\r\n    };\r\n  }\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/problem/problem-form/problem-form.component.ts","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Http, Headers, RequestOptions } from '@angular/http'\r\nimport getUrl from '../utils/callApi'\r\n\r\n@Injectable()\r\nexport class ProblemsService {\r\n\r\n  private options: Object\r\n\r\n  constructor(private http: Http) { \r\n    const headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    this.options = new RequestOptions({headers: headers});\r\n  }\r\n\r\n  machineNameValid(machineName: string){\r\n    return this.http.get(getUrl() + `pc/${machineName}`)\r\n  }\r\n\r\n  createProblem(problem: Object){\r\n    let form = new FormData()\r\n    form.append('Name', problem['Name'])\r\n    form.append('Description', problem['Description'])\r\n    form.append('User', problem['User'])\r\n    form.append('image', problem['image'])\r\n    return this.http.post(getUrl()+ `problems`, form);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/problem/problems.service.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpModule }  from '@angular/http';\r\n\r\nimport { routes } from './problems.routes'\r\nimport { ProblemFormComponent } from './problem-form/problem-form.component'\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { ProblemsService } from './problems.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProblemFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    HttpModule\r\n  ],\r\n  providers: [ProblemsService]\r\n})\r\nexport class ProblemsModule {\r\n  public static routes = routes\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/problem/problems.module.ts","import { ProblemFormComponent } from './problem-form/problem-form.component';\r\n\r\n\r\n\r\nexport const routes = [\r\n  {\r\n    path: '', children: [\r\n      { path: ':machineName', component: ProblemFormComponent }\r\n    ]\r\n  }\r\n]\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/problem/problems.routes.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"h2 {\\r\\n  color: #686B79;\\r\\n}\\r\\n\\r\\n.problemContainer {\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\\r\\n.problemForm {\\r\\n  margin: 0 auto;\\r\\n  max-width: 500px;\\r\\n}\\r\\n\\r\\n.problemForm form {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.problemForm .inputFW {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  color: rgba(0, 0, 0, 0.54);\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/problem/problem-form/problem-form.component.css\n// module id = 1112\n// module chunks = 0","module.exports = \"<div class=\\\"problemContainer\\\">\\r\\n  <div class=\\\"problemForm\\\">\\r\\n      <h2>Soumission de problème</h2>\\r\\n      <h3 class=\\\"success\\\">{{response}}</h3>\\r\\n      <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitForm()\\\" *ngIf=\\\"machine\\\">\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"inputFW\\\">\\r\\n            <input matInput formControlName=\\\"User\\\" placeholder=\\\"Adresse email\\\">\\r\\n            <mat-error>L'adresse email est requise et doit être une adresse de Vinci</mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"inputFW\\\">\\r\\n            <input matInput value=\\\"{{machineName}}\\\" placeholder=\\\"Nom de la machine\\\" disabled>\\r\\n            <mat-error>Le nom de la machine est requis</mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field class=\\\"inputFW\\\">\\r\\n            <textarea matInput placeholder=\\\"Description du problème (max 200 caractères)\\\" formControlName=\\\"Description\\\" rows=\\\"3\\\"></textarea>\\r\\n            <mat-error>La description est requise</mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <label>Image (Optionnel)</label><br><br>\\r\\n          <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\" name=\\\"image\\\" accept=\\\".png, .jpg, .jpeg, .gif, .svg\\\"/>\\r\\n        </p>\\r\\n        <button mat-raised-button color=\\\"primary\\\">Envoyer</button>\\r\\n      </form>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/problem/problem-form/problem-form.component.html\n// module id = 1113\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!./problem-form.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/problem/problem-form/problem-form.component.css\n// module id = 1114\n// module chunks = 0"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AAQA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AAGA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjGA;AANA;AACA;AACA;AACA;AACA;AACA;AAYA;AAXA;AAAA;;;;;;;;;;;;;;;;ACbA;AAEA;AACA;AAGA;AAIA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAxBA;AADA;AAKA;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAiBA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;AC1BA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}